plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.2'
	id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.hostfully'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	springDocVersion = "2.3.0"
	mapStructVersion = "1.5.5.Final"
	mapStructBidingVersion = "0.2.0"
	easyRandomVersion = "5.0.0"
}

dependencies {
	annotationProcessor "org.projectlombok:lombok-mapstruct-binding:${mapStructBidingVersion}"
	annotationProcessor "org.mapstruct:mapstruct-processor:${mapStructVersion}"
	annotationProcessor "org.projectlombok:lombok"
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

	compileOnly "org.projectlombok:lombok"

	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	runtimeOnly 'com.h2database:h2'

	implementation "org.mapstruct:mapstruct:${mapStructVersion}"
	implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:${springDocVersion}"
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	testAnnotationProcessor "org.projectlombok:lombok"

	testCompileOnly "org.projectlombok:lombok"

	testImplementation 'org.assertj:assertj-core'
	testImplementation "org.jeasy:easy-random-core:${easyRandomVersion}"
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
	useJUnitPlatform()
}

compileJava {
	options.compilerArgs += [
			'-Amapstruct.defaultComponentModel=spring',
			'-Amapstruct.defaultInjectionStrategy=constructor',
			'-Amapstruct.unmappedSourcePolicy=IGNORE',
			'-Amapstruct.unmappedTargetPolicy=IGNORE'
	]
}
